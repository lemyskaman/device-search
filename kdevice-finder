#! /bin/bash

# shellcheck disable=SC2046
if [ ! $(which curl) ]; then
    echo 'Please install curl package'
    exit 1
fi

if [ -z  "$1" ]; then
    ip address
    echo ""
    echo 'PLease select a network interface from the above list ad pass it name  as first param.'
    echo "example:"
    echo "$ ./kdevice-gabbler-finder eth0"
    exit 1
fi


if ! ip a s  "$1"; then
    echo "$1 is not a valid network interface name for this thevice."
    exit
fi

CURL_MAX_TIME=0.1
OS=$(uname)
echo $CURL_MAX_TIME
echo $OS
if [ $OS="Darwin" ]; then 
    CURL_MAX_TIME=0,1
fi
#echo $CURL_MAX_TIME


requester(){
    request_ip=$1
    REQUEST=$(curl --max-time $CURL_MAX_TIME -s $request_ip:7777)
    if [[ ! -z $REQUEST ]]; then 
        KDEVICE_HOSTNAME=$(echo $REQUEST | sed -n 's|.*"hostname":"\([^"]*\)".*|\1|p')
        echo "Kdevice found:  $KDEVICE_HOSTNAME"
        echo "$TEST_IP"
        echo ""
        echo "Searching..." 
        echo ""
        return 0
    #else
    fi
}




#this was an atempt to get the ip automatically exlcluding virtual interfaces 
#THIS_DEVICE_IP=$(ip a s  | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | grep -v '172.17.0.1')



THIS_DEVICE_IP=$(ip a s  $1 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' )




echo "Search starts right now, for above iterface network "
#echo "This device local ip: $THIS_DEVICE_IP"
read W X Y Z <<<"${THIS_DEVICE_IP//./ }"
NETWORK_SEGMENT="$W.$X.$Y"
#echo "$NETWORK_SEGMENT"


echo "Searching..."
echo ""
#try with the ones after this device ip
for i in $( seq $(( $Z + 1 )) 255  )
do
       TEST_IP="$NETWORK_SEGMENT.$i" 
       requester $TEST_IP

done


#try with the ones befor this device ip
for i in $( seq 0 $(( $Z - 1 ))  )
do
       TEST_IP="$NETWORK_SEGMENT.$i" 
       requester $TEST_IP
done

echo "Search is over!  only above items found."



